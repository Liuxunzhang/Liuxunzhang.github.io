{"meta":{"title":"Error","subtitle":"","description":"","author":"Zhou muyun","url":"http://zhoumuyun.com","root":"/"},"pages":[{"title":"标签","date":"2023-12-02T11:55:30.000Z","updated":"2023-12-02T11:58:17.602Z","comments":true,"path":"tags/index.html","permalink":"http://zhoumuyun.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-12-02T12:00:16.000Z","updated":"2023-12-02T12:01:33.092Z","comments":true,"path":"categories/index.html","permalink":"http://zhoumuyun.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"图书管理系统","slug":"图书管理系统","date":"2023-12-16T14:17:44.000Z","updated":"2023-12-16T15:09:04.700Z","comments":true,"path":"2023/12/16/图书管理系统/","link":"","permalink":"http://zhoumuyun.com/2023/12/16/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","excerpt":"此篇介绍了图书管理系统的搭建","text":"此篇介绍了图书管理系统的搭建 登录首页界面这个代码用css和HTML形成了一个好看的登录界面 页面有用户名，密码，还有注册功能 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;欢迎来到图书馆&lt;/title&gt; &lt;style&gt; body &#123; margin: 0; padding: 0; font-family: Roboto; background-repeat: no-repeat; background-size: cover; background: linear-gradient(120deg, #007bff, #d0314c); height: 100vh; overflow: hidden; &#125; .center &#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 29vw; background: white; border-radius: 10px; &#125; .center h1 &#123; text-align: center; padding: 0 0 20px 0; border-bottom: 1px solid silver; &#125; .center form &#123; padding: 0 40px; box-sizing: border-box; &#125; form .txt_field &#123; position: relative; border-bottom: 2px solid #adadad; margin: 30px 0; &#125; .txt_field input &#123; width: 100%; padding: 0 5px; height: 40px; font-size: 16px; border: none; background: none; outline: none; &#125; .txt_field label &#123; position: absolute; top: 50%; left: 5px; color: #adadad; transform: translateY(-50%); font-size: 16px; pointer-events: none; &#125; .txt_field span::before &#123; content: &#x27;&#x27;; position: absolute; top: 40px; left: 0; width: 0px; height: 2px; background: #2691d9; transition: .5s; &#125; .txt_field input:focus~label, .txt_field input:valid~label &#123; top: -5px; color: #2691d9; &#125; .txt_field input:focus~span::before, .txt_field input:Valid~span::before &#123; width: 100%; &#125; .pass &#123; margin: -5px 0 20px 5px; color: #a6a6a6; cursor: pointer; &#125; .pass:hover &#123; text-decoration: underline; &#125; input[type=&quot;Submit&quot;] &#123; width: 100%; height: 50px; border: 1px solid; border-radius: 25px; font-size: 18px; font-weight: 700; cursor: pointer; &#125; input[type=&quot;Submit&quot;]:hover &#123; background: #2691d9; color: #e9f4fb; transition: .5s; &#125; .signup_link &#123; margin: 30px 0; text-align: center; font-size: 16px; color: #666666; &#125; .signup_link a &#123; color: #2691d9; text-decoration: none; &#125; .signup_link a:hover &#123; text-decoration: underline; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;center&quot;&gt; &lt;form method=&quot;post&quot; action=&quot;link.php&quot;&gt; &lt;h1&gt;欢迎来到图书馆&lt;/h1&gt; &lt;div class=&quot;txt_field&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot; required&gt; &lt;span&gt;&lt;/span&gt; &lt;label&gt;用户名&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;txt_field&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot; required&gt; &lt;span&gt;&lt;/span&gt; &lt;label&gt;密码&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;pass&quot;&gt; &lt;input type=&quot;checkbox&quot; name=&quot;remeber&quot; value=&quot;yes&quot;&gt;记住密码 &lt;/div&gt; &lt;div class=&quot;signup_link&quot;&gt; 还没有账号？&lt;a href=&quot;register.php&quot;&gt;注册&lt;/a&gt; &lt;/div&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 注册界面与register_process.php相关联，注册的信息将会导入数据库，可以通过index界面登录 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;注册新用户&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./index.css&quot;&gt; &lt;style&gt; body &#123; background-color: #f0f0f0; color: #333; font-family: Arial, sans-serif; background-color: #e0f7fa; &#125; input[type=&quot;text&quot;], input[type=&quot;password&quot;] &#123; width: 100%; padding: 12px 20px; margin: 8px 0; display: inline-block; border: 1px solid #ccc; box-sizing: border-box; &#125; input[type=&quot;submit&quot;] &#123; background-color: #4CAF50; color: white; padding: 14px 20px; margin: 8px 0; border: none; cursor: pointer; width: 100%; box-shadow: 0 9px #999; &#125; input[type=&quot;submit&quot;]:hover &#123; background-color: #45a049; box-shadow: 0 5px #666; transform: translateY(4px); &#125; .center &#123; margin: auto; width: 50%; border: 3px solid #73AD21; padding: 20px; box-shadow: 10px 10px 5px grey; border-radius: 25px; background-color: #ffffff; &#125; label &#123; font-size: 1.2em; color: #333; padding: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;html&gt;&lt;body&gt; &lt;div class=&quot;center&quot;&gt; &lt;form method=&quot;post&quot; action=&quot;register_process.php&quot;&gt; &lt;h1&gt;注册新用户&lt;/h1&gt; &lt;div class=&quot;txt_field&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot; required&gt; &lt;span&gt;用户名&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;txt_field&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot; required&gt; &lt;span&gt;密码&lt;/span&gt; &lt;/div&gt; &lt;input type=&quot;submit&quot; name=&quot;register&quot; value=&quot;注册&quot;&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 注册后台php连接表单，获取表单数据，生成插入语句，将数据插入到数据库中 1234567891011121314151617&lt;?php// 连接数据库$db = mysqli_connect(&#x27;localhost&#x27;, &#x27;root&#x27;, &#x27;root&#x27;, &#x27;security&#x27;) or exit(&quot;Error connecting&quot;);// 获取表单数据$username = mysqli_real_escape_string($db, $_POST[&#x27;username&#x27;]);$password = mysqli_real_escape_string($db, $_POST[&#x27;password&#x27;]);// 将数据插入到数据库中$query = &quot;INSERT INTO users (username, password) VALUES(&#x27;$username&#x27;, &#x27;$password&#x27;)&quot;;mysqli_query($db, $query);echo &quot;注册成功&quot;;// 重定向用户到登录页面header(&#x27;location: index.php&#x27;);?&gt; 连接管理系统和展示页面的php如果是admin就进入后台管理系统，如果不是管理员就普通用户登录 12345678910111213141516171819202122232425262728&lt;?phpsession_start();header(&#x27;content-type:text/html;charset=utf-8&#x27;);//isset 判断有没有值 trim 可以把字符串的所有空格去掉if (isset($_POST[&#x27;submit&#x27;])) &#123; $u = trim($_POST[&#x27;username&#x27;]); $p = trim($_POST[&#x27;password&#x27;]); $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;Error connecting&quot;);//将这个链接赋值给link mysqli_query($link, &quot;set name utf8&quot;); $sql = &quot;select * from users where username = &#x27;$u&#x27; and password = &#x27;$p&#x27;&quot;; $result = mysqli_query($link, $sql); //在mysql的变量$link里面执行$sql命令 if(mysqli_num_rows($result) &gt; 0) &#123; # 查询数据库行有没有这个结果，如果大于1就进入 $_SESSION[&#x27;username&#x27;] = $u; setcookie(&#x27;password&#x27;, $p, time() + 7 * 12 * 6,&#x27;/&#x27;);#依次是 名称、想要存储在 Cookie 中的值、Unix 时间戳 Cookie 的过期时间 if($u==&#x27;admin&#x27; &amp;&amp; $p==&#x27;admin&#x27;)&#123; #判断是不是admin用户，如果是admin就进入后台管理，如果不是就进入图书展示界面 header(&#x27;location:inindex.php&#x27;);#定位到后台管理系统 &#125; else &#123; header(&#x27;Location:new.php&#x27;); #然后定位到new.php exit();&#125;#然后退出 &#125; else &#123; echo &#x27;&lt;br&gt;&#x27;;#在数据库查询没有账号密码就会退出 echo &#x27;用户名或密码错误!请重新输入!&#x27;; &#125;&#125;?&gt; 图书展示界面这个界面有注销账号，图书展示，借阅展示，和搜索图书功能 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;清华大学图书馆&lt;/title&gt; &lt;style&gt; html, body &#123; width: 100%; margin: 0; padding: 0; background-color: #d3d3d3; &#125; .header &#123; background-color: #475767; text-align: center; color: white; &#125; .nav &#123; display: flex; justify-content: space-around; background-color: #475767; color: white; padding: 10px 0; &#125; .main &#123; display: flex; width: 100%; background-color: #d3d3d3; &#125; .sidebar, .content &#123; width: 100%; &#125; .sidebar &#123; background-color: #475767; padding: 10px; color: white; display: flex; flex-direction: column; justify-content: space-around; &#125; .content &#123; background-color: #f08844; &#125; .nav button, .sidebar button &#123; background-color: #008CBA; padding: 12px 24px; font-size: 16px; border-radius: 12px; transition-duration: 0.4s; border: none; &#125; .nav button:hover, .sidebar button:hover &#123; background-color: #4CAF50; color: white; &#125; .nav, .main, .sidebar &#123; display: flex; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;header class=&quot;header&quot;&gt; &lt;h1&gt;清华大学图书馆&lt;/h1&gt; &lt;div&gt;当前登录用户: &lt;?php echo $_SESSION[&quot;username&quot;]; ?&gt; &lt;/div&gt; &lt;/header&gt; &lt;nav class=&quot;nav&quot;&gt; &lt;button&gt;首页&lt;/button&gt; &lt;button&gt;排行榜&lt;/button&gt; &lt;button&gt;作家&lt;/button&gt; &lt;button&gt;我的书架&lt;/button&gt; &lt;form method=&quot;post&quot; action=&quot;search.php&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;搜索&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;搜索&quot;&gt; &lt;/form&gt; &lt;form method=&quot;post&quot; action=&quot;borrow_book.php&quot;&gt; &lt;label for=&quot;book_id&quot;&gt;图书ID:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;book_id&quot; name=&quot;book_id&quot;&gt;&lt;br&gt; &lt;label for=&quot;user_id&quot;&gt;用户ID:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;user_id&quot; name=&quot;user_id&quot;&gt;&lt;br&gt; &lt;label for=&quot;borrow_date&quot;&gt;借书日期:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;date&quot; id=&quot;borrow_date&quot; name=&quot;borrow_date&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;借书&quot;&gt; &lt;/form&gt; &lt;table id=&quot;borrow_records&quot;&gt; &lt;tr&gt; &lt;th&gt;图书ID&lt;/th&gt; &lt;th&gt;用户名&lt;/th&gt; &lt;th&gt;借书日期&lt;/th&gt; &lt;/tr&gt; &lt;?php include &#x27;fetch_borrow_records.php&#x27;; ?&gt; &lt;/table&gt; &lt;/nav&gt; &lt;div class=&quot;main&quot;&gt; &lt;div class=&quot;sidebar&quot;&gt; &lt;h2&gt;图书书库&lt;/h2&gt; &lt;button&gt;人气小说&lt;/button&gt; &lt;button&gt;人文社科&lt;/button&gt; &lt;button&gt;品质生活&lt;/button&gt; &lt;button&gt;经济管理&lt;/button&gt; &lt;button&gt;文学作品&lt;/button&gt; &lt;button&gt;文化艺术&lt;/button&gt; &lt;button&gt;自然科学&lt;/button&gt; &lt;button&gt;网络安全&lt;/button&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;微信图片_20231214170052.png&quot; alt=&quot;tupian&quot;&gt; &lt;!-- Content goes here --&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php date_default_timezone_set(&#x27;Asia/Shanghai&#x27;); // 设置时区为上海 echo date(&#x27;Y-m-d H:i:s&#x27;); // 输出格式为 &quot;2023-12-14 15:42:32&quot; if (isset($_SESSION[&quot;username&quot;])) &#123; echo &quot;&quot; . $_SESSION[&quot;username&quot;] . &quot;登录成功&quot;; exit(); &#125; if (isset($_GET[&#x27;logout&#x27;])) &#123; #如果获取的值是logout，就会判断成功 session_unset(); session_destroy(); #将sesion里的cookies注销销毁 echo &quot;你已成功注销&quot;; header(&#x27;Location:index.php&#x27;); #然后定位到主界面 &#125; echo &quot;&lt;h1&gt;&lt;a href=?logout=true&gt;注销&lt;/a&gt;&lt;/h1&gt;&quot;; #设置logout的按键 ?&gt;&lt;/body&gt;&lt;/html&gt; 搜索系统 12345678910111213141516171819&lt;?php$search = $_POST[&#x27;search&#x27;];$link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;);mysqli_query($link, &quot;set names utf8&quot;);$search = mysqli_real_escape_string($link, $search);$query = &quot;SELECT * FROM books WHERE name LIKE &#x27;%$search%&#x27; OR author LIKE &#x27;%$search%&#x27;&quot;;$result = mysqli_query($link, $query);if ($result) &#123; while ($row = mysqli_fetch_assoc($result)) &#123; echo &quot;书籍名字: &quot; . $row[&#x27;name&#x27;] . &quot;&lt;br&gt;&quot;; echo &quot;作者: &quot; . $row[&#x27;author&#x27;] . &quot;&lt;br&gt;&quot;; echo &quot;出版年份: &quot; . $row[&#x27;year&#x27;] . &quot;&lt;br&gt;&lt;br&gt;&quot;; &#125;&#125; else &#123; echo &quot;搜索失败&quot;;&#125;mysqli_close($link);?&gt; 借阅系统 12345678910111213141516171819202122232425262728293031&lt;?php $conn = mysqli_connect(&#x27;127.0.0.1&#x27;, &#x27;root&#x27;, &#x27;root&#x27;, &#x27;security&#x27;); if (!$conn) &#123; die(&quot;连接失败: &quot; . mysqli_connect_error()); &#125; if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123; $book_id = $_POST[&#x27;book_id&#x27;]; $username = $_POST[&#x27;username&#x27;]; $borrow_date = $_POST[&#x27;borrow_date&#x27;]; $sql = &quot;INSERT INTO borrow_records (book_id, username, borrow_date) VALUES (&#x27;$book_id&#x27;, &#x27;$username&#x27;, &#x27;$borrow_date&#x27;)&quot;; if (mysqli_query($conn, $sql)) &#123; echo &quot;图书借阅成功&quot;; // 查询该用户的借书记录 $query = &quot;SELECT * FROM borrow_records WHERE username = &#x27;$username&#x27;&quot;; $result = mysqli_query($conn, $query); if (mysqli_num_rows($result) &gt; 0) &#123; // 输出每一条借书记录 while($row = mysqli_fetch_assoc($result)) &#123; echo &quot;图书ID: &quot; . $row[&quot;book_id&quot;]. &quot; - 用户名: &quot; . $row[&quot;username&quot;]. &quot; - 借书日期: &quot; . $row[&quot;borrow_date&quot;]. &quot;&lt;br&gt;&quot;; &#125; &#125; else &#123; echo &quot;没有借书记录&quot;; &#125; &#125; else &#123; echo &quot;错误: &quot; . $sql . &quot;&lt;br&gt;&quot; . mysqli_error($conn); &#125; &#125; mysqli_close($conn);?&gt; 借书记录展示 123456789101112131415161718&lt;?php$conn = mysqli_connect(&#x27;127.0.0.1&#x27;, &#x27;root&#x27;, &#x27;root&#x27;, &#x27;security&#x27;);if (!$conn) &#123; die(&quot;连接失败: &quot; . mysqli_connect_error());&#125;// 获取当前用户的借阅记录$sql = &quot;SELECT * FROM borrow_records WHERE username = &#x27;&quot;.$_SESSION[&quot;username&quot;].&quot;&#x27;&quot;;$result = mysqli_query($conn, $sql);// 输出每一条借阅记录while($row = mysqli_fetch_assoc($result)) &#123; echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row[&quot;book_id&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;.$row[&quot;username&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;.$row[&quot;borrow_date&quot;].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;&#125;mysqli_close($conn);?&gt; 图书管理后台利用element插件和js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./index.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;el-container&gt; &lt;el-aside class=&quot;ce&quot;&gt; &lt;el-row class=&quot;tac&quot;&gt; &lt;el-col :span=&quot;24&quot;&gt; &lt;el-menu default-active=&quot;2&quot; class=&quot;el-menu-vertical-demo&quot; @open=&quot;handleOpen&quot; @close=&quot;handleClose&quot; background-color=&quot;#545c64&quot; text-color=&quot;#fff&quot; active-text-color=&quot;#ffd04b&quot;&gt; &lt;el-submenu index=&quot;1&quot;&gt; &lt;template slot=&quot;title&quot;&gt; &lt;i class=&quot;el-icon-location&quot;&gt;&lt;/i&gt; &lt;span&gt;后台管理增删改查&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group&gt; &lt;el-menu-item index=&quot;1-1&quot; @click=&quot;router()&quot;&gt;用户&lt;/el-menu-item&gt; &lt;el-menu-item index=&quot;1-2&quot; @click=&quot;router2()&quot;&gt;书籍&lt;/el-menu-item&gt; &lt;/el-menu-item-group&gt; &lt;/el-submenu&gt; &lt;el-submenu index=&quot;2&quot;&gt; &lt;template slot=&quot;title&quot;&gt; &lt;i class=&quot;el-icon-location&quot;&gt;&lt;/i&gt; &lt;span&gt;图书管理&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group&gt; &lt;el-menu-item index=&quot;2-1&quot; @click=&quot;router3()&quot;&gt;中国书籍&lt;/el-menu-item&gt; &lt;el-menu-item index=&quot;2-2&quot; @click=&quot;router()&quot;&gt;国外书籍&lt;/el-menu-item&gt; &lt;/el-menu-item-group&gt; &lt;/el-submenu&gt; &lt;el-menu-item index=&quot;3&quot; @click=&quot;router()&quot;&gt; &lt;i class=&quot;el-icon-document&quot;&gt;&lt;/i&gt; &lt;span slot=&quot;title&quot;&gt;借阅中心&lt;/span&gt; &lt;/el-menu-item&gt; &lt;/el-menu&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/el-aside&gt; &lt;el-container&gt; &lt;el-header&gt; &lt;el-col :span=&quot;24&quot;&gt; &lt;el-card shadow=&quot;never&quot;&gt; &lt;el-breadcrumb separator=&quot;/&quot;&gt; &lt;h1 action=&quot;new.php&quot;&gt; &lt;el-icon&gt; &lt;Expand /&gt; &lt;/el-icon&gt;首页 &lt;/h1&gt; &lt;h1&gt;欢迎来到图书管理系统&lt;/h1&gt; &lt;/el-breadcrumb&gt; &lt;/el-card&gt; &lt;/el-col&gt; &lt;/el-header&gt; &lt;el-main&gt; &lt;iframe :src=&quot;iframeSrc&quot; frameborder=&quot;false&quot; style=&quot;top:80px;left: 120px;width: 100%;height: 500px&quot;&gt;&lt;el-calendar v-model=&quot;value&quot;&gt; &lt;/el-calendar&gt;&lt;/iframe&gt; &lt;/el-main&gt; &lt;/el-container&gt; &lt;/el-container&gt; &lt;/div&gt; &lt;script src=&quot;./vue.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt; &lt;script&gt; new Vue(&#123; el: &#x27;#app&#x27;, data: function () &#123; return &#123; visible: false, iframeSrc: &#x27;&#x27;, &#125; &#125;, methods: &#123; handleOpen(key, keyPath) &#123; console.log(key, keyPath); &#125;, handleClose(key, keyPath) &#123; console.log(key, keyPath); &#125; &#125;, methods: &#123; router() &#123; this.iframeSrc = &quot;admin.php&quot; &#125;, router2() &#123; this.iframeSrc = &quot;admin2.php&quot; &#125;, router3() &#123; this.iframeSrc = &quot;fetch_borrow_records.php&quot; &#125; &#125; &#125;) &lt;/script&gt; &lt;style&gt; .ce &#123; height: 98vh; width: 20vh; background: #545C64; margin: 0; box-shadow: none; &#125; &lt;/style&gt;&lt;/body&gt;&lt;/html&gt; 用户管理系统 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;用户管理系统&lt;/title&gt; &lt;style&gt; body &#123; font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f4f4f4; &#125; h1 &#123; text-align: center; padding: 20px 0; background-color: #333; color: #fff; &#125; form &#123; width: 80%; margin: 20px auto; padding: 20px; background-color: #fff; border-radius: 5px; &#125; label &#123; display: block; margin-bottom: 10px; &#125; input[type=&quot;text&quot;], input[type=&quot;password&quot;] &#123; width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd; border-radius: 5px; &#125; table &#123; width: 80%; margin: 20px auto; border-collapse: collapse; &#125; th, td &#123; padding: 10px; border: 1px solid #ddd; &#125; th &#123; background-color: #333; color: #fff; &#125; a &#123; margin-right: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;用户管理系统&lt;/h1&gt; &lt;form method=&quot;post&quot; action=&quot;&quot;&gt; &lt;label for=&quot;username&quot;&gt;用户名&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot;&gt;&lt;br /&gt; &lt;label for=&quot;password&quot;&gt;密码&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; name=&quot;add&quot; value=&quot;添加用户&quot;&gt; &lt;/form&gt; &lt;?php if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &#x27;POST&#x27;) &#123; if (isset($_POST[&#x27;add&#x27;]) &amp;&amp; !empty($_POST[&#x27;username&#x27;]) &amp;&amp; !empty($_POST[&#x27;password&#x27;])) &#123; $username = $_POST[&#x27;username&#x27;]; $password = $_POST[&#x27;password&#x27;]; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $insert = &quot;INSERT INTO users (username, password) VALUES(&#x27;$username&#x27;, &#x27;$password&#x27;)&quot;; if (mysqli_query($link, $insert)) &#123; echo &quot;用户添加成功&quot;; &#125; else &#123; echo &quot;用户添加失败&quot;; &#125; mysqli_close($link); &#125; &#125; if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &#x27;GET&#x27; &amp;&amp; $_GET[&#x27;action&#x27;] == &#x27;delete&#x27;) &#123; $id = $_GET[&#x27;id&#x27;]; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $delete = &quot;DELETE FROM users WHERE id = $id&quot;; if (mysqli_query($link, $delete)) &#123; echo &quot;用户删除成功&quot;; &#125; else &#123; echo &quot;用户删除失败&quot;; &#125; mysqli_close($link); &#125; if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &#x27;GET&#x27; &amp;&amp; $_GET[&#x27;action&#x27;] == &#x27;update&#x27;) &#123; $id = $_GET[&#x27;id&#x27;]; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $select = &quot;SELECT * FROM users WHERE id = $id&quot;; $result = mysqli_query($link, $select); $row = mysqli_fetch_assoc($result); echo &quot;&lt;form method=&#x27;post&#x27; action=&#x27;&#x27;&gt; &lt;label for=&#x27;username&#x27;&gt;用户名&lt;/label&gt;&lt;br /&gt; &lt;input type=&#x27;text&#x27; id=&#x27;username&#x27; name=&#x27;username&#x27; value=&#x27;&#123;$row[&#x27;username&#x27;]&#125;&#x27;&gt;&lt;br /&gt; &lt;label for=&#x27;password&#x27;&gt;密码&lt;/label&gt;&lt;br /&gt; &lt;input type=&#x27;password&#x27; id=&#x27;password&#x27; name=&#x27;password&#x27; value=&#x27;&#123;$row[&#x27;password&#x27;]&#125;&#x27;&gt;&lt;br /&gt; &lt;input type=&#x27;hidden&#x27; name=&#x27;id&#x27; value=&#x27;$id&#x27;&gt; &lt;input type=&#x27;submit&#x27; name=&#x27;update&#x27; value=&#x27;更新用户&#x27;&gt; &lt;/form&gt;&quot;; &#125; elseif ($_SERVER[&quot;REQUEST_METHOD&quot;] == &#x27;POST&#x27; &amp;&amp; isset($_POST[&#x27;update&#x27;])) &#123; $id = $_POST[&#x27;id&#x27;]; $username = $_POST[&#x27;username&#x27;]; $password = $_POST[&#x27;password&#x27;]; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $update = &quot;UPDATE users SET username = &#x27;$username&#x27;, password = &#x27;$password&#x27; WHERE id = $id&quot;; if (mysqli_query($link, $update)) &#123; echo &quot;用户更新成功&quot;; &#125; else &#123; echo &quot;用户更新失败&quot;; &#125; mysqli_close($link); &#125; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $show =&quot;SELECT * FROM users ORDER BY id DESC LIMIT 20&quot;; $result = mysqli_query($link, $show); if ($result) &#123; echo &quot;&lt;table&gt;&quot;; echo &quot;&lt;tr&gt;&lt;th&gt;用户&lt;/th&gt;&lt;th&gt;密码&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt;&lt;/tr&gt;&quot;; while ($row = mysqli_fetch_assoc($result)) &#123; echo &quot;&lt;tr&gt;&quot;; echo &quot;&lt;td&gt;&#123;$row[&#x27;username&#x27;]&#125;&lt;/td&gt;&quot;; echo &quot;&lt;td&gt;&#123;$row[&#x27;password&#x27;]&#125;&lt;/td&gt;&quot;; echo &quot;&lt;td&gt;&lt;a href=&#x27;?action=delete&amp;id=&#123;$row[&#x27;id&#x27;]&#125;&#x27;&gt;删除&lt;/a&gt; | &lt;a href=&#x27;?action=update&amp;id=&#123;$row[&#x27;id&#x27;]&#125;&#x27;&gt;修改&lt;/a&gt;&lt;/td&gt;&quot;; echo &quot;&lt;/tr&gt;&quot;; &#125; echo &quot;&lt;/table&gt;&quot;; &#125; else &#123; echo &quot;获取名单失败&quot;; &#125; mysqli_close($link); ?&gt;&lt;/body&gt;&lt;/html&gt; 书籍管理系统 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;书籍管理系统&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;书籍管理系统&lt;/h1&gt; &lt;form method=&quot;post&quot; action=&quot;&quot;&gt; &lt;label for=&quot;name&quot;&gt;书籍名字&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;name&quot; name=&quot;name&quot;&gt;&lt;br /&gt; &lt;label for=&quot;author&quot;&gt;作者&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;author&quot; name=&quot;author&quot;&gt;&lt;br /&gt; &lt;label for=&quot;year&quot;&gt;出版年份&lt;/label&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;year&quot; name=&quot;year&quot;&gt;&lt;br /&gt; &lt;input type=&quot;submit&quot; name=&quot;add&quot; value=&quot;添加书籍&quot;&gt; &lt;/form&gt; &lt;?php if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &#x27;POST&#x27;) &#123; if (isset($_POST[&#x27;add&#x27;]) &amp;&amp; !empty($_POST[&#x27;name&#x27;]) &amp;&amp; !empty($_POST[&#x27;author&#x27;]) &amp;&amp; !empty($_POST[&#x27;year&#x27;])) &#123; $name = $_POST[&#x27;name&#x27;]; $author = $_POST[&#x27;author&#x27;]; $year = $_POST[&#x27;year&#x27;]; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $insert = &quot;INSERT INTO books (name, author, year) VALUES(&#x27;$name&#x27;, &#x27;$author&#x27;, &#x27;$year&#x27;)&quot;; if (mysqli_query($link, $insert)) &#123; echo &quot;书籍添加成功&quot;; &#125; else &#123; echo &quot;书籍添加失败&quot;; &#125; mysqli_close($link); &#125; &#125; $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;连接失败&quot;); mysqli_query($link, &quot;set names utf8&quot;); $show =&quot;SELECT * FROM books ORDER BY id DESC LIMIT 20&quot;; $result = mysqli_query($link, $show); if ($result) &#123; echo &quot;&lt;table&gt;&quot;; echo &quot;&lt;tr&gt;&lt;th&gt;书籍名字&lt;/th&gt;&lt;th&gt;作者&lt;/th&gt;&lt;th&gt;出版年份&lt;/th&gt;&lt;/tr&gt;&quot;; while ($row = mysqli_fetch_assoc($result)) &#123; echo &quot;&lt;tr&gt;&quot;; echo &quot;&lt;td&gt;&#123;$row[&#x27;name&#x27;]&#125;&lt;/td&gt;&quot;; echo &quot;&lt;td&gt;&#123;$row[&#x27;author&#x27;]&#125;&lt;/td&gt;&quot;; echo &quot;&lt;td&gt;&#123;$row[&#x27;year&#x27;]&#125;&lt;/td&gt;&quot;; echo &quot;&lt;/tr&gt;&quot;; &#125; echo &quot;&lt;/table&gt;&quot;; &#125; else &#123; echo &quot;获取书籍列表失败&quot;; &#125; mysqli_close($link); ?&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"图书管理系统","slug":"图书管理系统","permalink":"http://zhoumuyun.com/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"vue和element的使用","slug":"vue和element的使用","date":"2023-12-16T14:02:04.000Z","updated":"2023-12-16T14:16:57.099Z","comments":true,"path":"2023/12/16/vue和element的使用/","link":"","permalink":"http://zhoumuyun.com/2023/12/16/vue%E5%92%8Celement%E7%9A%84%E4%BD%BF%E7%94%A8/","excerpt":"此篇介绍了vue的安装和element组件的组装","text":"此篇介绍了vue的安装和element组件的组装 vue的安装 pm create vue@latest #创建文件 npm install element-plus –save #安装element插件 npm install -D unplugin-vue-components unplugin-auto-import #安装组件 要更改三个配置文件 main.js的配置文件 123456import &#123; createApp &#125; from &#x27;vue&#x27; import App from &#x27;./App.vue&#x27; import ElementPlus from &#x27;element-plus&#x27;; import &#x27;element-plus/dist/index.css&#x27; createApp(App).mount(&#x27;#app&#x27;) app.vue的代码解释 1234src/App.vue是入口文件&lt;script setup&gt;&lt;/script&gt;。 //导包&lt;template&gt;&lt;/template&gt;。 //html部分&lt;style scoped&gt;&lt;/style&gt; //css部分 vite.config.js的配置文件 1234567891011121314151617181920212223242526import &#123; fileURLToPath, URL &#125; from &#x27;node:url&#x27; import &#123; defineConfig &#125; from &#x27;vite&#x27; import vue from &#x27;@vitejs/plugin-vue&#x27; import AutoImport from &#x27;unplugin-auto-import/vite&#x27; import Components from &#x27;unplugin-vue-components/vite&#x27; import &#123; ElementPlusResolver &#125; from &#x27;unplugin-vue-components/resolvers&#x27; // https://vitejs.dev/config/ export default defineConfig(&#123; plugins: [ vue(), // ... AutoImport(&#123; resolvers: [ElementPlusResolver()], &#125;), Components(&#123; resolvers: [ElementPlusResolver()], &#125;), ], resolve: &#123; alias: &#123; &#x27;@&#x27;: fileURLToPath(new URL(&#x27;./src&#x27;, import.meta.url)) &#125; &#125; &#125;) element主题 最后的样式lt;script setup&gt; import &#123; Delete, Edit, Search, Share, Upload, User, Menu as IconMenu, Setting, Shop, Tickets, PieChart, Expand, Star, Message, &#125; from &quot;@element-plus/icons-vue&quot;; //导入一些element上面的组件 const tableData = [ //导入表格数据 &#123; number: &quot;1&quot;, name: &quot;周杰伦&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;2&quot;, name: &quot;刘德华&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;3&quot;, name: &quot;张学友&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;4&quot;, name: &quot;周星驰&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;5&quot;, name: &quot;梁朝伟&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;6&quot;, name: &quot;马云&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;7&quot;, name: &quot;刘备&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, &#123; number: &quot;9&quot;, name: &quot;关羽&quot;, address: &quot;中国&quot;, date: &quot;2016-05-03&quot;, juese: &quot;歌手&quot;, status: &quot;休息&quot;, email: &quot;lxz@gmail.com&quot;, &#125;, ];&lt;/script&gt;&lt;template&gt; &lt;div class=&quot;common-layout&quot;&gt; &lt;el-container&gt; //一个大容器 &lt;el-aside class=&quot;CE&quot;&gt; &lt;el-col :span=&quot;24&quot;&gt;//侧边栏 &lt;h1 class=&quot;title&quot;&gt;&lt;/h1&gt; &lt;el-menu active-text-color=&quot;#ffd04b&quot; background-color=&quot;#283747&quot; class=&quot;el-menu-vertical-demo&quot; default-active=&quot;2&quot; text-color=&quot;#fff&quot; @open=&quot;handleOpen&quot; @close=&quot;handleClose&quot; &gt; &lt;el-sub-menu index=&quot;1&quot;&gt; &lt;template #title&gt; &lt;el-icon&gt;&lt;User /&gt;&lt;/el-icon&gt; &lt;span&gt;用户管理&lt;/span&gt; &lt;/template&gt;&lt;el-menu-item-group title=&quot;&quot;&gt; &lt;el-menu-item index=&quot;1-1&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;用户列表&lt;/el-menu-item &gt;&lt;/el-menu-item-group&gt;&lt;!-- &lt;el-sub-menu index=&quot;1-4&quot;&gt;&lt;template #title&gt;item four&lt;/template&gt;&lt;el-menu-item index=&quot;1-4-1&quot;&gt;item one&lt;/el-menu-item&gt;&lt;/el-sub-menu&gt; --&gt; &lt;/el-sub-menu&gt; &lt;el-sub-menu index=&quot;2&quot;&gt; &lt;template #title&gt; &lt;el-icon&gt;&lt;Setting /&gt;&lt;/el-icon&gt; &lt;span&gt;权限管理&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group title=&quot;&quot;&gt; &lt;el-menu-item index=&quot;1-1&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;用户列表&lt;/el-menu-item &gt; &lt;/el-menu-item-group&gt; &lt;/el-sub-menu&gt; &lt;el-sub-menu index=&quot;3&quot;&gt; &lt;template #title&gt; &lt;el-icon&gt;&lt;Shop /&gt;&lt;/el-icon&gt; &lt;span&gt;商品管理&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group title=&quot;&quot;&gt; &lt;el-menu-item index=&quot;1-1&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;用户列表&lt;/el-menu-item &gt; &lt;/el-menu-item-group&gt; &lt;/el-sub-menu&gt; &lt;el-sub-menu index=&quot;4&quot;&gt; &lt;template #title&gt; &lt;el-icon&gt;&lt;Tickets /&gt;&lt;/el-icon&gt; &lt;span&gt;订单管理&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group title=&quot;&quot;&gt; &lt;el-menu-item index=&quot;1-1&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;用户列表&lt;/el-menu-item &gt; &lt;/el-menu-item-group&gt; &lt;/el-sub-menu&gt; &lt;el-sub-menu index=&quot;5&quot;&gt; &lt;template #title&gt; &lt;el-icon&gt;&lt;PieChart /&gt;&lt;/el-icon&gt; &lt;span&gt;数据统计&lt;/span&gt; &lt;/template&gt; &lt;el-menu-item-group title=&quot;&quot;&gt; &lt;el-menu-item index=&quot;1-1&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt;用户列表&lt;/el-menu-item &gt; &lt;/el-menu-item-group&gt; &lt;/el-sub-menu&gt; &lt;!-- &lt;el-menu-item index=&quot;2&quot;&gt; &lt;el-icon&gt;&lt;icon-menu /&gt;&lt;/el-icon&gt; &lt;span&gt;功能二&lt;/span&gt; &lt;/el-menu-item&gt; &lt;el-menu-item index=&quot;3&quot; disabled&gt; &lt;el-icon&gt;&lt;document /&gt;&lt;/el-icon&gt; &lt;span&gt;功能三&lt;/span&gt; &lt;/el-menu-item&gt; &lt;el-menu-item index=&quot;4&quot;&gt; &lt;el-icon&gt;&lt;setting /&gt;&lt;/el-icon&gt; &lt;span&gt;功能四&lt;/span&gt; &lt;/el-menu-item&gt; --&gt; &lt;/el-menu&gt; &lt;/el-col&gt; &lt;/el-aside&gt; &lt;el-container&gt; &lt;el-header&gt; &lt;el-col :span=&quot;24&quot;&gt; &lt;el-card shadow=&quot;never&quot;&gt; &lt;el-breadcrumb separator=&quot;/&quot;&gt; &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot; &gt;&lt;h1&gt; &lt;el-icon&gt;&lt;Expand /&gt;&lt;/el-icon&gt;首页 &lt;/h1&gt;&lt;/el-breadcrumb-item &gt; &lt;el-breadcrumb-item&gt;&lt;h1&gt;用户列表&lt;/h1&gt;&lt;/el-breadcrumb-item&gt; &lt;/el-breadcrumb&gt; &lt;/el-card&gt; &lt;/el-col&gt; &lt;/el-header&gt; &lt;el-main&gt; &lt;el-card class=&quot;box-card&quot;&gt; &lt;div class=&quot;text item&quot;&gt; &lt;el-input class=&quot;input&quot; v-model=&quot;input&quot; placeholder=&quot;请输入要搜索的用户名&quot; /&gt; &lt;el-button type=&quot;primary&quot;&gt;搜索&lt;/el-button&gt; &lt;el-button type=&quot;primary&quot;&gt;添加用户&lt;/el-button&gt; &lt;el-table :data=&quot;tableData&quot; class=&quot;table&quot;&gt; &lt;el-table-column prop=&quot;number&quot; label=&quot;#&quot; width=&quot;60&quot; /&gt; &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot; /&gt; &lt;el-table-column prop=&quot;email&quot; label=&quot;邮箱&quot; /&gt; &lt;el-table-column prop=&quot;juese&quot; label=&quot;角色&quot; /&gt; &lt;el-table-column prop=&quot;status&quot; label=&quot;状态&quot; /&gt; &lt;el-table-column prop=&quot;date&quot; label=&quot;创建时间&quot; /&gt; &lt;el-table-column prop=&quot;make&quot; label=&quot;操作&quot;&gt; &lt;el-button type=&quot;info&quot; :icon=&quot;Message&quot; circle /&gt; &lt;el-button type=&quot;warning&quot; :icon=&quot;Star&quot; circle /&gt; &lt;el-button type=&quot;danger&quot; :icon=&quot;Delete&quot; circle /&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;el-pagination v-model:current-page=&quot;currentPage4&quot; v-model:page-size=&quot;pageSize4&quot; :page-sizes=&quot;[100, 200, 300, 400]&quot; :small=&quot;small&quot; :disabled=&quot;disabled&quot; :background=&quot;background&quot; layout=&quot;total, sizes, prev, pager, next, jumper&quot; :total=&quot;400&quot; @size-change=&quot;handleSizeChange&quot; @current-change=&quot;handleCurrentChange&quot; /&gt; &lt;/div&gt; &lt;/el-card&gt; &lt;/el-main&gt; &lt;/el-container&gt; &lt;/el-container&gt; &lt;/div&gt;&lt;/template&gt;&lt;style scoped&gt;.CE &#123; width: 15vw; background: #283747; height: 100vh;&#125;.table&#123; width: 100%; height: 50vh; &#125;.title &#123; display: flex; justify-content: center; align-items: center;&#125;.input &#123; margin-top: 10px; margin-bottom: 10px; width: 30vh; padding: 10px;&#125;.text &#123; font-size: 14px;&#125;.item &#123; padding: 10px;&#125;.box-card &#123; width: 80.5vw; margin-top: 3vh; height: 85vh;&#125;&lt;/style&gt;","categories":[{"name":"上课笔记","slug":"上课笔记","permalink":"http://zhoumuyun.com/categories/%E4%B8%8A%E8%AF%BE%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"php学习","slug":"php学习","date":"2023-12-16T13:23:11.000Z","updated":"2023-12-17T01:46:13.574Z","comments":true,"path":"2023/12/16/php学习/","link":"","permalink":"http://zhoumuyun.com/2023/12/16/php%E5%AD%A6%E4%B9%A0/","excerpt":"这篇介绍了php语言的用法，连接数据库，和php和MySQL的一些函数","text":"这篇介绍了php语言的用法，连接数据库，和php和MySQL的一些函数 简单交互打开Apache和MySql 连接数据库，打开navicat ， 文件—-&gt;新建连接—-&gt;新建连接 名字可以随便取 地址就填连接数据库的ip地址 在数据库里面建立自己的库和表单 打开网站根目录 创建两个文件进行修改 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;form method=&quot;post&quot;action=&quot;link.php&quot;&gt; &lt;tr&gt; &lt;td&gt;用户名&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/td&gt; &lt;/tr&gt;&lt;br&gt; &lt;tr&gt; &lt;td&gt;密码&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/td&gt; &lt;/tr&gt;&lt;br&gt; &lt;tr&gt; &lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;remeber&quot; value=&quot;yes&quot;&gt;记住密码&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;&lt;/td&gt; &lt;/tr&gt;&lt;br&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 12345678910111213141516171819202122&lt;?phpheader(&#x27;content-type:text/html;charset=utf-8&#x27;);//isset 判断有没有值 trim 可以把字符串的所有空格去掉//mysqli_connect(&quot;127.0.0.1&quot;,&quot;root&quot;,&quot;root&quot;,security) or exit(&quot;Error connecting&quot;);//mysqli_query(&quot;数据库名字&quot;，&quot;执行语句 set names utf8&quot;);if (isset($_POST[&#x27;submit&#x27;])) &#123; //数据交互 $u = trim($_POST[&#x27;username&#x27;]); $p = trim($_POST[&#x27;password&#x27;]); $link = mysqli_connect(&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;root&quot;, &quot;security&quot;) or exit(&quot;Error connecting&quot;);//将这个链接赋值给link mysqli_query($link, &quot;set name utf8&quot;); $sql = &quot;select * from users where username = &#x27;$u&#x27; and password = &#x27;$p&#x27;&quot;; $result = mysqli_query($link, $sql); //在mysql的变量$link里面执行$sql命令 $row = mysqli_fetch_array($result); //mysqli_fetch_array 接受一个结果对象作为参数，检索给定结果对象中当前行的内容，并将其作为关联数组或数值数组返回。 if ($row) &#123; echo &#x27;Your Login name:&#x27; . $row[&#x27;username&#x27;]; echo &#x27;Your password:&#x27; . $row[&#x27;password&#x27;]; &#125; else echo &#x27;None&#x27;;&#125;?&gt; 打开网站 输入账号密码，实现交互 文件的简单上传 12345678910111213141516171819202122232425262728293031&lt;?php//输入文件上传框echo &#x27;&lt;form action=&quot;&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;label for=&quot;upload&quot;&gt;上传你的头像&lt;/label&gt;&lt;input name=&quot;file&quot; id=&quot;upload&quot; type=&quot;file&quot; &gt;&lt;label for=&quot;submit&quot; &gt;文件上传&lt;/label&gt;&lt;input name=&quot;submit&quot; id=&quot;submit&quot; type=&quot;submit&quot;&gt;&lt;h1&gt;下面是接收到的文件&lt;/h1&gt;&lt;/form&gt;&#x27;;header(&#x27;Content-Type: text/html; charset=utf-8&#x27;);//定位到text/htmlif(isset($_FILES[&quot;file&quot;]))&#123;//如果有这个文件 $upload_dir = &quot;uploads&quot;; $file_name = $_FILES[&quot;file&quot;][&quot;name&quot;]; $file_type = $_FILES[&quot;file&quot;][&quot;type&quot;]; $file_size = $_FILES[&quot;file&quot;][&quot;size&quot;]; $file_tmp = $_FILES[&quot;file&quot;][&quot;tmp_name&quot;]; $target_path = $upload_dir.&#x27;/&#x27;.$file_name; if (move_uploaded_file($file_tmp, $target_path))&#123; echo &quot;上传成功&quot;.&quot;&lt;br&gt;&quot;; echo &quot;文件类型: &quot; . $file_type . &quot;&lt;br&gt;&quot;; echo &quot;文件大小: &quot; . ($file_size / 1024) . &quot; kB&lt;br&gt;&quot;; echo &quot;文件存储的位置: &quot; . $target_path; &#125;else&#123; echo &quot;上传失败&quot;.&quot;&lt;br&gt;&quot;; &#125; echo &quot;&lt;br/&gt;&quot;;echo &quot;&lt;img src=&#x27;./$target_path.&#x27;&gt;&quot;;&#125;?&gt; php和mysli的连接一般函数以下是一些常见的 PHP MySQLi 函数及其参数和用法： mysqli_affected_rows($link)返回上一次 MySQL 操作所影响的记录行数。$link 是一个 MySQL 连接。 1234$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);mysqli_query($con, &quot;DELETE FROM table_name WHERE condition&quot;);echo &quot;受影响的行数: &quot; . mysqli_affected_rows($con);mysqli_close($con); mysqli_autocommit($link, $mode)打开或关闭自动提交数据库修改。$link 是一个 MySQL 连接，$mode 是一个布尔值，如果设置为 TRUE，打开自动提交；如果设置为 FALSE，关闭自动提交。 12345$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);mysqli_autocommit($con, FALSE);mysqli_query($con, &quot;INSERT INTO table_name (column1, column2) VALUES (value1, value2)&quot;);mysqli_commit($con);mysqli_close($con); mysqli_change_user($link, $username, $password, $database)更改指定数据库连接的用户。$link 是一个 MySQL 连接，$username 是一个字符串，表示 MySQL 用户名，$password 是一个字符串，表示 MySQL 密码，$database 是一个字符串，表示 MySQL 数据库名。 12$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);mysqli_change_user($con, &quot;new_username&quot;, &quot;new_password&quot;, &quot;new_database&quot;); mysqli_character_set_name($link)返回数据库连接的默认字符集。$link 是一个 MySQL 连接。 123$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);echo &quot;默认字符集: &quot; . mysqli_character_set_name($con);mysqli_close($con); mysqli_close($link)关闭先前打开的数据库连接。$link 是一个 MySQL 连接。 12$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);mysqli_close($con); mysqli_connect($hostname, $username, $password, $database, $port, $socket)打开一个到 MySQL 服务器的新的连接。$hostname 是一个字符串，表示 MySQL 服务器的主机名，$username 是一个字符串，表示 MySQL 用户名，$password 是一个字符串，表示 MySQL 密码，$database 是一个字符串，表示 MySQL 数据库名，$port 是一个整数，表示 MySQL 服务器的端口号，$socket 是一个字符串，表示 MySQL 服务器的套接字或命名管道。 123456$con = mysqli_connect(&quot;localhost&quot;, &quot;username&quot;, &quot;password&quot;, &quot;database&quot;);if (!$con) &#123; die(&quot;连接失败: &quot; . mysqli_connect_error());&#125;echo &quot;连接成功&quot;;mysqli_close($con);","categories":[{"name":"上课笔记","slug":"上课笔记","permalink":"http://zhoumuyun.com/categories/%E4%B8%8A%E8%AF%BE%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"PHP配置和交互","slug":"PHP配置和交互","permalink":"http://zhoumuyun.com/tags/PHP%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BA%A4%E4%BA%92/"}]},{"title":"html和css的基础知识","slug":"html和css的基础知识","date":"2023-12-10T01:18:45.000Z","updated":"2023-12-10T02:12:50.192Z","comments":true,"path":"2023/12/10/html和css的基础知识/","link":"","permalink":"http://zhoumuyun.com/2023/12/10/html%E5%92%8Ccss%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","excerpt":"此篇介绍了css的盒子模型,HTML的基本元素,css和html的结合等基础知识","text":"此篇介绍了css的盒子模型,HTML的基本元素,css和html的结合等基础知识 盒模型示意图： 盒模型的组成部分：内容区域（Content）：内容区域是元素实际包含内容的区域，例如文本、图像或其他子元素。这个区域的大小可以通过设置 width 和 height 属性来控制 内边距（Padding）：内边距是内容区域与边框之间的区域。它提供了一种方法来控制内容与边框之间的空间。可以使用 padding 属性来设置内边距的大小 边框（Border）：边框是围绕在内边距外部的区域，用于包围元素内容。可以使用 border 属性来定义边框的宽度、样式和颜色 外边距（Margin）：外边距是元素与其他元素之间的空白区域。它用于控制元素与周围元素之间的距离。可以使用 margin 属性来设置外边距的大小 模型的计算方式：content Width&#x2F;Height（内容宽度&#x2F;高度）：由 width 和 height 属性设置，表示内容区域的大小 padding（内边距）：在内容区域和边框之间。例如：padding: 10px; 表示内边距为 10 像素 border（边框）：包围在内边距外部。例如：border: 1px solid #000; 表示边框为 1 像素的黑色实线 Margin（外边距）：元素与周围元素之间的空白区域。例如：margin: 20px; 表示外边距为 20 像素 HTML的基本元素 css的配置颜色和背景color: 设置文本颜色 background-color: 设置背景颜色 background-image: 设置背景图片 opacity: 设置元素的透明度 盒模型width 和 height: 设置元素的宽度和高度 margin: 设置元素的外边距 padding: 设置元素的内边距 border: 设置元素的边框 布局和定位display: 设置元素的显示方式（如 block、inline、flex 等） position: 控制元素的定位方式（如 static、relative、absolute、fixed 等） float: 允许元素在左侧或右侧浮动 文本排版font-family: 设置字体族名称 font-size: 设置字体大小 font-weight: 设置字体粗细 text-align: 设置文本水平对齐方式 line-height: 设置行高 装饰性样式text-decoration: 设置文本修饰（如下划线、删除线等） border-radius: 设置元素边角的圆角半径 box-shadow: 添加阴影效果 动画和过渡animation: 设置元素的动画效果 transition: 设置元素样式的过渡效果 响应式设计@media: 媒体查询，根据不同的设备尺寸或特性应用不同的 CSS 样式 CSS 属性可以通过不同的方式在 HTML 元素中使用内联样式（Inline Styles）: 内部样式表（Internal Styles） 外部样式表（External Styles） 以上方法中，使用 CSS 属性时需要注意以下几点:属性名和值之间使用冒号 : 分隔，属性值需要用分号 ; 结尾 多个样式属性可以用分号 ; 分隔开 在规则集中定义的选择器（如 p、.class、#id 等）决定了哪些 HTML 元素会受到这些样式的影响。这些方法使得你可以根据需要，选择合适的方式来应用 CSS 属性，以控制 HTML 元素的外观和布局。","categories":[{"name":"前端笔记","slug":"前端笔记","permalink":"http://zhoumuyun.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"数据解析模块","slug":"数据解析模块","date":"2023-12-09T12:53:59.000Z","updated":"2023-12-09T12:56:43.779Z","comments":true,"path":"2023/12/09/数据解析模块/","link":"","permalink":"http://zhoumuyun.com/2023/12/09/%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9D%97/","excerpt":"此篇介绍了bs模块和xpath模块","text":"此篇介绍了bs模块和xpath模块 BS4解析1234567891011121314151617181920212223from bs4 import BeautifulSouphtml = &quot;&quot;&quot; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;zhangwuji&quot;&gt;张无忌&lt;/a&gt;&lt;/li&gt; &lt;li id=&quot;abc&quot;&gt;&lt;a href=&quot;zhouxingchi.com&quot;&gt;周星驰&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;zhubaji.com&quot;&gt;猪八戒&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;wuzetian.com&quot;&gt;武则天&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&quot;&quot;&quot;page = BeautifulSoup(html, &#x27;html.parser&#x27;)page.find(&quot;标签名&quot;,attr=&#123;&quot;属性&quot;:&quot;属性值&quot;&#125;)#查找某个元素，只会找到一个结果page.find_all(&quot;标签名&quot;,attr=&#123;&quot;属性&quot;:&quot;属性值&quot;&#125;) #会找到一堆结果li = page.find_all(&quot;标签名&quot;,attr=&#123;&quot;属性&quot;:&quot;属性值&quot;&#125;)a =li.find_all(&quot;a&quot;)print(a.text)print(a.get(&#x27;href&#x27;))li_list = page.find_all(&quot;li&quot;)for li in li_list: a = li.find(&quot;a&quot;) print(a.text) print(a.get(&#x27;href&#x27;)) Xpathxpath是一门XML文档中查找信息的语言，XPath可用来在XML文档中对元素和属性进行遍历，而我们熟知的HTML恰巧属于XML的一个子集，所以完全可以用xpath去查找HTML中的元素 123456789&lt;book&gt; &lt;id&gt;1&lt;/id&gt; &lt;name&gt;野花遍地&lt;/name&gt; &lt;price&gt;19.99&lt;/price&gt; &lt;author&gt; &lt;nick&gt;周杰伦&lt;/nick&gt; &lt;nick&gt;周星驰&lt;/nick&gt; &lt;/author&gt;&lt;/book&gt; 在上述html中 节点的介绍1，book,id,name,price….都被称作为节点 2，id,name,price,author都被称book的子节点 3，book被id,name,price,author称作为父节点 4，id,name,price,author被称为同胞节点 xpath的运用例子result &#x3D; et.xpath(“&#x2F;book”) #表示根节点 reslut &#x3D; et.path(“book&#x2F;name”) #在Xpth中间的&#x2F;表示是儿子 reslut &#x3D; et.path(“book&#x2F;name&#x2F;text()”)[0] #text()拿文本 reslut &#x3D; et.path(“book&#x2F;&#x2F;nick”) # &#x2F;&#x2F; 表示的是子孙后代 *reslut &#x3D; et.path(“book&#x2F;&#x2F;nick&#x2F;text()”) # 通配符 谁都行* reslut &#x3D; et.path(“book&#x2F;author&#x2F;nick[@class&#x3D;”jay”]&#x2F;text()”) # []表示属性筛选，@属性名 &#x3D; 值 reslut &#x3D; et.path(“book&#x2F;partner&#x2F;nick&#x2F;@id”) #最后一个&#x2F;表示拿到nick里面id的内容，@属性，可以直接拿到属性值 li_list &#x3D; et.xpath(“html&#x2F;body&#x2F;ul&#x2F;li”) #得到是一个列表 li_list &#x3D; et.xpath(“html&#x2F;body&#x2F;ul&#x2F;li[]”) #可以在后面直接中括号定位 li_list &#x3D; et.xpath(“&#x2F;&#x2F;li”) #可以拿到很多li for li in li_list: li.xpath(“.&#x2F;“) #.&#x2F;相对 表示当前的节点，这里的.&#x2F;就是li li.xpath(“.&#x2F;a&#x2F;@href”) #想要href ，只写href,不写属性，就是拿取属性 li.xpath(“.&#x2F;a&#x2F;text()”) #想要文本","categories":[{"name":"python笔记","slug":"python笔记","permalink":"http://zhoumuyun.com/categories/python%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"爬虫的一些实例","slug":"爬虫的一些实例","date":"2023-12-09T11:39:06.000Z","updated":"2023-12-09T11:54:16.643Z","comments":true,"path":"2023/12/09/爬虫的一些实例/","link":"","permalink":"http://zhoumuyun.com/2023/12/09/%E7%88%AC%E8%99%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AE%9E%E4%BE%8B/","excerpt":"此篇介绍了爬虫的一些实例，暂时有：豆瓣TOP250的电影信息，电影天堂的下载地址，爬取一些网站的图片","text":"此篇介绍了爬虫的一些实例，暂时有：豆瓣TOP250的电影信息，电影天堂的下载地址，爬取一些网站的图片 爬取豆瓣TOP250的电影信息用了for循环迭代每一页的数据，用header解决一些反爬措施，用正则表达式去匹配 123456789101112131415import reimport requestsfor i in range(0,250,25): #爬取每一页25个数据 url = f&quot;https://movie.douban.com/top250/&#123;i&#125;&quot; header = &#123; &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;&#125; res = requests.get(url, headers=header) #发送给豆瓣的获取的相应包 pagesoure = res.text #查看源代码 # print(pagesoure) obj = re.compile(r&#x27;&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&#x27;, re.S) #预加载，获取正则表达式 result = obj.finditer(pagesoure)#用正则表达式去匹配网页源代码，获得的一个带有数据的迭代器 for item in result: print(item.group(&quot;name&quot;))#迭代输出元素，用group来获取数据 爬取电影天堂下载地址用来正则表达式预加载，用finditer迭代出每个网站的子域名，然后进行拼接爬取 12345678910111213141516171819202122232425262728293031323334import reimport requestsurl = &quot;https://www.dy2018.com/&quot;resp = requests.get(url)resp.encoding = &quot;gbk&quot; # 统一编码obj1 = re.compile(r&quot;2023必看热片.*?&lt;ul&gt;(?P&lt;html&gt;.*?)&lt;/ul&gt;&quot;, re.S)# 使用正则规则result1 = obj1.search(resp.text)# 在一个页面只提取一次，用searchhtml = result1.group(&quot;html&quot;)# 将提取的数据用group包装obj2 = re.compile(&quot;&lt;li&gt;&lt;a href=&#x27;(?P&lt;href&gt;.*?)&#x27; title&quot;)# 匹配收到的页面数据result2 = obj2.finditer(html)# 将匹配的数据放进迭代器for item in result2: child_url = url.strip(&quot;/&quot;) + item.group(&quot;href&quot;) # 拼接出子页面的地址 chile_resp = requests.get(child_url) # 发送子页面的请求包 chile_resp.encoding = &quot;gbk&quot; # 将获取到的数据统一编码 # print(chile_resp.text) obj3 = re.compile(r&#x27;class=&quot;position&quot;.*?◎片 名 (?P&lt;name&gt;.*?)&lt;br /&gt;.*?&lt;td style=&quot;WORD-WRAP: break-word&quot; bgcolor=&quot;#fdfddf&quot;&gt;&lt;a href=&quot;(?P&lt;zhongzi&gt;.*?)&quot;&gt;&#x27;, re.S) # 匹配正则规则 result3 = obj3.search(chile_resp.text) # 这里用search,每个页面的只匹配一次 print(result3.group(&quot;name&quot;)) # 将匹配的名字和下载地址包装输出 print(result3.group(&quot;zhongzi&quot;)) 如果在正则里面想要使用变量，就要使用下面这种形式 custom_text &#x3D; “2023新片精品” {re.escape(custom_text)} pattern &#x3D; re.compile(fr”{re.escape(custom_text)}.?(?P.?)“, re.S) 12345678910111213141516171819202122import requestsimport reurl = &quot;https://www.dytt8.com/&quot;resp = requests.get(url)resp.encoding = &quot;gbk&quot;# print(resp.text)obj1 = re.compile(r&#x27;新片精品.*?&lt;/tr&gt;(?P&lt;html&gt;.*?)&lt;/table&gt;&#x27;, re.S)results = obj1.search(resp.text)html = results.group(&quot;html&quot;)obj2 = re.compile(r&quot;&lt;a href=&#x27;(?P&lt;mulu&gt;.*?)&#x27;&gt;&quot;)result1 = obj2.finditer(html)for item in result1: new_url = url.strip(&quot;/&quot;) + item.group(&quot;mulu&quot;) print(new_url) new_html = requests.get(new_url) new_html.encoding = &quot;gbk&quot; obj3 = re.compile(r&#x27;id=&quot;Zoom&quot;.*?◎片 名 (?P&lt;name&gt;.*?)&lt;br /&gt;.*?&lt;a target=&quot;_blank&quot; href=&quot;(?P&lt;zhongzi&gt;.*?)&quot;&gt;&#x27;, re.S) resp2 = obj3.search(new_html.text) print(resp2.group(&quot;name&quot;)) print(resp2.group(&quot;zhongzi&quot;)) 爬取网站的图片用bs4解析网站源码，用来find_all()方法和find方法 page.find(“标签名”,attr&#x3D;{“属性”:”属性值”}) #查找某个元素，只会找到一个结果page.find_all(“标签名”,attr&#x3D;{“属性”:”属性值”}) #会找到一堆结果 12345678910111213141516171819202122232425262728293031import requestsfrom bs4 import BeautifulSoup as bfsn = 1 #图片名称url = &quot;https://www.umei.net/&quot;res = requests.get(url)res.encoding = &#x27;utf-8&#x27; # 设置编码main_page = bfs(res.text, &#x27;html.parser&#x27;) # 用html.parser来解析a_list = main_page.find_all(&quot;li&quot;, attrs=&#123;&quot;class&quot;: &quot;i_list list_n2&quot;&#125;) # 找到所有li标签，并指定class为i_list list_n2值的数据print(len(a_list))for i in a_list: img = i.find(&quot;img&quot;).get(&quot;data-original&quot;) #父链接的图片 href = i.find(&quot;a&quot;).get(&quot;href&quot;) # 找到a标签的href属性 new_url = url.strip(&quot;/&quot;) + href # 去除网站的/,方便和href连接 &quot;&quot;&quot; 注意： 子页面的url如果开头是/，直接在前面加上域名就可以了 子页面的url如果开头不是/，此时需要是找到主页面的url，去掉最后一个/后面的内容和当前的url进行拼接 &quot;&quot;&quot; res1 = requests.get(new_url) #获取子连接的请求包 res1.encoding = &#x27;UTF-8&#x27; # 设置编码 new_page = bfs(res1.text, &quot;html.parser&quot;)#用html.parser来解析子链接 div = new_page.find(&quot;div&quot;, attrs=&#123;&quot;class&quot;: &quot;image_div&quot;&#125;) # 找到div标签，并指定class为image_div值的数据 img1_src = div.find(&quot;img&quot;).get(&quot;src&quot;) # 找到img标签，并获取src属性值 print(img1_src) #下载图片 img_rsps = requests.get(img1_src) #发送图片请求包 with open(f&quot;&#123;n&#125;.jpg&quot;,mode=&quot;wb&quot;) as f: #打开一个文件，注意此时写入文件的是字节，所以必须是wb f.write(img_rsps.content)#把图片信息写入到文件中 n+=1res.close()print(&quot;爬取成功&quot;)","categories":[{"name":"python笔记","slug":"python笔记","permalink":"http://zhoumuyun.com/categories/python%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"爬虫的相关库和相关原理","slug":"爬虫的相关库和相关原理","date":"2023-12-09T11:26:41.000Z","updated":"2023-12-09T11:35:11.148Z","comments":true,"path":"2023/12/09/爬虫的相关库和相关原理/","link":"","permalink":"http://zhoumuyun.com/2023/12/09/%E7%88%AC%E8%99%AB%E7%9A%84%E7%9B%B8%E5%85%B3%E5%BA%93%E5%92%8C%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/","excerpt":"此篇介绍了爬虫的相关库和相关原理。HTTP协议和request模块（findall，finditer，search，match，re.compile，group(“名字”),re.S)，和re正则表达式，","text":"此篇介绍了爬虫的相关库和相关原理。HTTP协议和request模块（findall，finditer，search，match，re.compile，group(“名字”),re.S)，和re正则表达式， HTTP协议HTTP把一条信息分为三大块内容，无论请求还是相应都是三块内容 请求： 1， 请求行 -&gt; 请求 方式（get,post） 请求url地址（协议） 2，请求头 -&gt; 放一些服务器要使用的附加信息 3，请求体 -&gt; 一般放一些请求参数 相应： 1，状态行 -&gt; 协议 状态码 2，响应头 -&gt; 放一些客户端要使用的一些附加信息 3，响应体 -&gt; 服务器返回的真正客户端要用的内容（HTML，json等） request模块简单调用 123456import requests#爬取百度的页面源代码url = &quot;http://www.baidu.com&quot;res = requests.get(url)res.encoding = &quot;utf-8&quot;print(res.text)#拿到页面源代码 get请求 12345678910import requestscontent = input(&quot;请输入你要检索的内容: &quot;)url = f&quot;https://www.sougou.com/web?query=&#123;content&#125;&quot;headers = &#123; &quot;User-Agent:&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;&#125;#添加请求头伪装res = requests.get(url,headers=headers)print(res.text) post请求 12345678910111213141516import requestsurl = &quot;https://fanyi.baidu.com/sug&quot;data = &#123; &quot;kw&quot; : input(&quot;请输入你想翻译的单词&quot;)&#125;res = requests.post(url,data=data)print(res.json()) #此时拿到的是json数据data = &#123;&quot;type&quot;: &quot;13&quot;,&quot;interval_id&quot;: &quot;100:90&quot;,&quot;action&quot;:&quot;&quot; ,&quot;start&quot;: &quot;0&quot;,&quot;limit&quot;: &quot;20&quot; 爬取多个参数 123456789101112131415161718import requestsurl = &quot;https://movie.douban.com/j/chart/top_list&quot;data = &#123; &quot;type&quot;: &quot;13&quot;, &quot;interval_id&quot;: &quot;100:90&quot;, &quot;action&quot;: &quot;&quot;, &quot;start&quot;: &quot;0&quot;, &quot;limit&quot;: &quot;20&quot;&#125;#这个就是url的“ ？”后的数据header = &#123; &quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.3&quot;&#125;rest = requests.get(url,params=data,headers=header)print(rest.request.url) re正则表达式一种使用表达式的方式对字符串进行匹配的语法规则 我们抓取道德网页源码啊本质上是一个超长的字符串 正则的优点：速度快，效率高，准确性高 . 匹配除了换行符以外的任意字符，未来在python的re模块中是一个坑 \\w 匹配字母或者数字下划线 匹配3个就 \\w\\w\\w \\s 匹配任意的空白符 匹配多少个就输入多少次 \\d 匹配数字 \\n 匹配一个换行符 \\t 匹配一个制表符 ^ 匹配字符串的开始 ^18692930701$匹配电话号码 $ 匹配字符串的结尾 \\W 匹配非字母和数字下滑线 \\D 匹配非数字 \\S 匹配非空白符 a|b 匹配字符a或字符b () 匹配括号内的表达式，也表示一个组 […] 匹配字符组中的字符，{abcde] 匹配a,b,c,d,e, [a-zA-Z0-9] 匹配数字字母 [^…] 匹配除了字符组中字符的所有字符 类似于上面的取反 量词：控制前面的元字符出现的次数，尽可能往多了去匹配 *** 重复0次或者更多次** + 重复一次或更多次 连续的一串 ？ 重复0次或者一次 最多匹配一次 {n} 重复n次 {n,} 重复n次或者更多次 {n,m} 重复n到m次 贪婪匹配和惰性匹配： . 贪婪匹配 尽可能多的拿到结果* .*? 惰性匹配 尽可能少的去匹配结果 回溯 re模块**findall：从页面里面提取怎么样的参数 ** 123import reresult = re.findall(r&quot;\\d+&quot;,&quot;我是一个33333abcde4444fg&quot;) #\\一般是转义字符，要用正则表达式一般要在引号前面加上rprint(result)#输出33333 4444 finditer：这是重点，涉及迭代器 12345import reresult = re.finiter(r&quot;\\d+&quot;,&quot;我是一个33333abcde4444fg&quot;) #\\一般是转义字符，要用正则表达式一般要在引号前面加上rprint(result)#得到了一个迭代器for item in result: print(item.group())#从匹配的结果拿到数据 search只会匹配到第一次匹配的内容 123456import re#search只会匹配到第一次匹配的内容result = re.search(r&quot;\\d+&quot;,&quot;我叫周杰伦，今年45岁，我的班级是3年3班&quot;)#print(result)#得到的是一个match对象#加上group()方法print(result.group()) match，在匹配的时候，是从字符串的开头进行匹配的，类似在正则前面加上了^ 12res = re.match(r&quot;\\d+&quot;,&quot;我叫周杰伦，今年32岁，我的班级是五年四班&quot;)print(res) 预加载，提前把正则对象加载完毕 1234obj = re.compile(r&quot;\\d+&quot;)#先加载正则表达式，减少内存result = obj.findall(&quot;我叫周杰伦，今年32岁，我的班级是五年四班&quot;)print(result) 想要提取数据必须要用小括号括起来，可以单独取名字 (?p&lt;名字&gt;正则) 提取数据的时候需要group(“名字”) 12345678910111213141516#一段数据s = &quot;&quot;&quot;&lt;div class = &#x27;西游记&#x27;&gt;&lt;span id = &#x27;10010&#x27;&gt;中国联通&lt;/span&gt;&lt;/div&gt;&lt;div class = &#x27;西游记&#x27;&gt;&lt;span id = &#x27;10086&#x27;&gt;中国移动&lt;/span&gt;&lt;/div&gt;&quot;&quot;&quot;#(?p&lt;dianhua&gt;&#x27;\\d+&#x27;),取这里一段连续的数字，()将他们分成一个列表，？p&lt;name&gt;将这段数据取一个名字#(?p&lt;yunyingshang&gt;.*? .*?匹配汉字只能使用&#x27;.&#x27;,这里用的是惰性匹配，尽可能少的匹配，obj = re.complile(r&quot;&lt;span id = (?p&lt;dianhua&gt;&#x27;\\d+&#x27;)&gt;(?p&lt;yunyingshang&gt;.*?)&lt;/span&gt;&lt;/div&gt;&quot;)res = obj.finditer(s)#将匹配数据整合成一个迭代器for item in result: id = item.group(&quot;dianhua&quot;) #迭代器用group()方法显示数据 prine(id) phont = item.group(&quot;yunyingshang&quot;) print(phone) re.S 这个是重点，每次记得加上 ，可以匹配换行符，弥补正则的不足 123456789101112131415161718192021222324252627import reimport requestsf = open(&quot;top250.csv&quot;, mode=&quot;w&quot;, encoding=&quot;utf-8&quot;)for i in range(0, 250, 25): # 每个页面是25个数据，要循环到250个 url = f&quot;https://movie.douban.com/top250?start=&#123;i&#125;&amp;filter=&quot; # 这里i在网页中是一个变量，控制着网页的内容 header = &#123; # 伪装 &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;&#125; res = requests.get(url, headers=header) pagesoure = res.text # 将爬取的页面存放成一个对象 # print(pagesoure) obj = re.compile(r&#x27;&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;.*?&lt;p class=&quot;&quot;&gt;.*?&#x27; r&#x27;导演: (?P&lt;daoyan&gt;.*?)&amp;nbsp;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp;.*?&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;&#x27; r&#x27;(?P&lt;score&gt;.*?)&lt;/span&gt;.*?&lt;span&gt;(?P&lt;con&gt;.*?)人评价&lt;/span&gt;&#x27;, re.S) # 提前部署利用正则表达式，和html的一些规律，(?P&lt;name&gt;.*?)意思是将这里匹配到的数据用name储存起来， result = obj.finditer(pagesoure) # 将源代码用finditer()过滤成迭代器 for item in result: # 开始迭代迭代器里面的内容 name = item.group(&quot;name&quot;) # 将迭代出的数据包装成name输出 daoyan = item.group(&quot;daoyan&quot;) year = item.group(&quot;year&quot;).strip() score = item.group(&quot;score&quot;) con = item.group(&quot;con&quot;) f.write(f&quot;&#123;name&#125;,&#123;daoyan&#125;,&#123;year&#125;,&#123;score&#125;,&#123;con&#125;\\n&quot;) print(name, daoyan, year, score, con)f.close()res.close()","categories":[{"name":"python笔记","slug":"python笔记","permalink":"http://zhoumuyun.com/categories/python%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"网络基础","slug":"网络基础","date":"2023-12-09T11:19:55.000Z","updated":"2023-12-10T06:32:37.326Z","comments":true,"path":"2023/12/09/网络基础/","link":"","permalink":"http://zhoumuyun.com/2023/12/09/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/","excerpt":"这篇介绍了网络地址的划分和范围，数据包的流向，osi模型，虚拟网卡和路由表的作用，proxifer和wireshark的使用","text":"这篇介绍了网络地址的划分和范围，数据包的流向，osi模型，虚拟网卡和路由表的作用，proxifer和wireshark的使用 IP地址划分网络地址分为五个段，一般使用的是三个类，D类和C类不常用 A类IP地址：在IP地址的四段号码中，第一段号码为网络号码，剩下的三段号码为本地计算机的号码。所以A类IP地址的网络地址数量少，只有126个网络，但每个网络可以容纳的主机数量有1600多万台。127.255.255.255是广播地址。 B类IP地址：B类IP地址的前2个字节代表网络地址，后2个字节代表主机地址，这类IP地址适用于中等规模的网络，有16384个网络，每个网络所能容纳的计算机数为6万多台 C类IP地址：C类IP地址的前三段为网络号码，剩下的一段号码为本地计算机号码。所以C类网络地址数量较多，有209万多个网络，适用于小规模的局域网络，每个网络可以容纳254台计算机 D类IP地址：D类IP地址在历史上叫多播地址，也叫组播地址。在以太网中，多播地址命名了一组应该在这个网络中应用接收到一个分组的站点。多播地址的最高位必须是“1110”，范围从224.0.0.0到239.255.255.255。 ABC段都保留了一部分地址供我们私网使用 数据包怎么到你想要访问的服务器 数据包的流向：私网IP地址–&gt;路由器–&gt;光猫转化为公网IP–光纤–&gt;云–&gt;百度的公网IP 一般的内网怎么划分的学校的内网用一个IP将内网分配 路由和IP分配路由有静态路由和动态路由 静态路由:自己设定的下一跳，然后路由跟着自己的下一跳去走 动态路由:路由器自己分配最优路径，下一跳为动态分配 IP分配有静态ip和动态(DHCP)IP地址分配 静态IP：自己设置ip地址 动态ip：dhcp配置地址 当一个内网里面，IP相同，会发生冲突，有可能会两台主机都上不了网 osi模型 路由表的作用教室1的PC1要是想连接教室2的PC2， 经过路由器1 路由器1配置路由表指向路由器2 路由器2中有PC2的mac地址 然后路由器2的下一跳就到PC2 虚拟网卡的作用 桥接：借用主机的网卡地址进行通信 nat：转化为虚拟地址，通过虚拟网卡与主机通信，从而与外界上网 代理的搭建打开proxifer软件 点击上面的配置文件————》代理服务器 点击添加 地址配置本地地址，端口是clash上面的代理端口 第二步 打开配置文件–&gt;&gt;代理规则–&gt;&gt; 设置成ssh的代理 wireshark的使用打开wireshark，监听本地上网端口 输入自己要过滤的包","categories":[{"name":"上课笔记","slug":"上课笔记","permalink":"http://zhoumuyun.com/categories/%E4%B8%8A%E8%AF%BE%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"python的函数说明","slug":"python的函数说明","date":"2023-12-03T08:22:58.000Z","updated":"2023-12-03T08:24:12.746Z","comments":true,"path":"2023/12/03/python的函数说明/","link":"","permalink":"http://zhoumuyun.com/2023/12/03/python%E7%9A%84%E5%87%BD%E6%95%B0%E8%AF%B4%E6%98%8E/","excerpt":"此篇介绍了函数的参数、函数的作用域、闭包、函数的装饰器、迭代器、推导式、生成器、匿名函数、内置函数","text":"此篇介绍了函数的参数、函数的作用域、闭包、函数的装饰器、迭代器、推导式、生成器、匿名函数、内置函数 函数的参数列表传入函数有对应的方法*arg表示传递任何参数 **kwarg传递任何字典参数 *,**\\表示接受所有参数，打包成元组和字典 *args一定是一个元组，**kwargs一定是一个字典 12345stu_list = [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;]def func(*arg):#*代表传递任何参数 print(arg)func(*stu_list)#*在实参位置，把列表打成位置参数进行传递，但是很不常见 #**在实参位置，可以把字典自动转化为关键字参数进行传递 关于return返回值：函数执行之后，会给调用方一个结果，这个结果就是返回值 1，如果函数内没有return，此时外界收到的None 2，函数只要执行到了return，函数就会立即停止并返回内容，函数内的return的后续代码不会执行 3，如果写了return ​ 只写了return，后面不跟数据，此时收到的依然是None ​ return 值，此时表示函数有一个返回值，外界能够接收到一个数据 ​ return 值1，值2，值3…..，此时函数有多个返回值，外界收到的是一个元组 123456def func(): print(123) return #会让程序停止，后续代码不会继续执行，类似循环里面的break print（456）ret = func()print(ret)#这里的函数代码指挥执行到123 1234def func(): return 1,2,3,4ret = func()print(ret) #收到的是一个元组数据 (1,2,3,4) 函数的作用域global:在局部（在函数中），引入全局变量 nonlocal：在局部，引入外层的局部变量，从内到外，一层一层往外找。如果有就引入，如果没有就继续向外，直到全局（不包括全局） 1234567def func(): a = 10 def func2(): a = 20 def func3(): nonlocal a #这里引入的是fun2的a a =30 #更改的是func2中a的值 123456a = 10def func(): global a #把全局变量引入到局部 a = 20func()print(a) #这里a就更改为20了 闭包1，可以让一个变量常驻于内存 2，避免全局变量被修改 123456789def func(): a = 10 #变量在函数体内部，不能通过global去修改，只能调用inner函数 def inner(): nonlocal a #应用上一次的变量a return a return inner #返回 调用inner函数ret = func() #返回了一个a值r1 = ret()print(r1) 函数的装饰器装饰器本质上是一个 Python 函数或类，它可以让其他函数或类在不需要做任何代码修改的前提下增加额外功能，装饰器的返回值也是一个函数&#x2F;类对象 在运行函数前，将函数传入到装饰器里面，会先运行这个函数前的装饰器 比较适应于登录验证操作 1234567891011121314def wrapper(fn):#wrapper 装饰器 fn 目标函数 def inner(*arg,**kwargs):#*,**表示接受所有参数，打包成元组和字典 #在目标函数执行之前... ret = fn(*args,**kwargs) #目标函数 #在目标函数执行之后... return ret return inner#注意不能加()@wrapper #声明装饰器def target(): passtarget() # =&gt; inner()#将target传入wrapper(),wrapper(target)&gt;inner()#一个函数可以被多个装饰器装饰 #规则和规律 wrapper1 wrapper2 tagert wrapper2 wrapper1 12345678910111213141516171819202122def guanjia(game):#guanjia里面的game是形参 def inner(*args,**kwargs):#任何传递给inner的位置参数都会被args所接受，所有的关键字参数都被kwarg所接受 print(&quot;打开外挂&quot;) game(*arfs,**kwargs)#将形参的函数这里打开 v实参 #将一个元组或者字典一个个打开成位置参数和关键字参数 print(&quot;关闭外挂&quot;) return inner@guanjia #play_dnf = guanjia(play_dnf) 这里通过装饰器包装，这里的play_dnf是实参 def play_dnf(username ,password): print(&quot;我要开始玩dnf了&quot;,username ,password) print(&quot;你好啊，我叫赛利亚，今天是美好的一天&quot;！) @guanjia #play_lol = guanjia(play_lol)def play_lol(username,password,hero): print(&quot;我要开始玩lol了。&quot;,uesername,password,hero) print(&quot;德玛西亚&quot;)play dnf(&quot;admin&quot;,&quot;12345&quot;) #实际上是传入inner()里面play dnf(&quot;admin&quot;,&quot;232131&quot;,&quot;大盖伦&quot;)#因为玩每个游戏的所要调用的参数不同 所以inner()就要里面就要用*,**来接受所有参数 12345678910111213141516171819202122def wrapper1(fn): def inner(*args,**kwargs): print(&quot;这里是wrapper1进入&quot;) #第一步 ret = fn(*args,**kwargs): #进入wrapper.inner print(&quot;这里是wrapper1退出&quot;)#第五步 return ret return innerdef wrapper2(fn): def inner(*args,**kwargs): print(&quot;这里是wrapper2进入&quot;) #第二步 ret = fn(*args,**kwargs):#进入target print(&quot;这里是wrapper2退出&quot;)#第四步 return ret return inner@wrapper1@wrapper2def target(): print(&quot;我是目标&quot;)#第三步target()#输出 这里是wrapper1进入 这里是wrapper2进入 我是目标 这里是wrapper2退出 这里是wrapper1退出 迭代器terabl:可迭代的东西 .iterator:迭代器 可迭代的数据类型：str,list,tuple,dict,set,open() 可迭代的数据类型都会提供一个叫做迭代器的东西，这个迭代器可以帮我们把数据类型中的数据逐一的拿到 获取迭代器的两种方案： iter()内置函数可以直接拿到迭代器 next() 从迭代器里面拿到数据 __iter()__特殊方法 __next()__特殊方法 for循环里面一定是要拿迭代器的，所有不可迭代的东西不能用for循环 for循环里面一定有__next__出现 总结：迭代器统一了不同数据类型的遍历工作 迭代器本身也是可以迭代的 迭代器本身的特性： 1.只能向前，不能反复 2.特别节省内存 3.惰性机制 推导式简化代码，节省内存 语法： ​ 列表推导式：[数据 for循环 if判断] ​ 集合推导式：{数据 for循环 if判断} ​ 字典推导式：{k:v for循环 if判断} 不要不推导式妖魔化. (数据 for循环 if判断) —&gt; 不是元组推导式，根本就没有元组推导式。这个东西是生成器表达式 12345678910111213141516171819lst = []for i in range(10): lst.append(i)print(lst)#改成推导式lst[i for i in range(10)]print(lst)#请创建一个列表[1,3,5,7,9]lst[i for i in range(10) if i%2!=0]lst2 = [i for i in range(1,10,2)] #range(起始值，结束值，步长)#生成20件衣服lst = [f&quot;衣服&#123;i&#125; for i in range(20)&quot;]#将如下列表中所有的英文字母修改成大写lst3 = [&quot;bob&quot;,&quot;tom&quot;,&quot;tony&quot;,&quot;kevin&quot;]lst4 = [item.upper() for item in lst3]#请将下列的列表修改成字典，要求索引作为key,数据作为valuelst5 = [&quot;林俊杰&quot;，&quot;周杰伦&quot;,&quot;林志玲&quot;,&quot;刘德华&quot;,&quot;梁朝伟&quot;]dic6 = &#123;i:lst5[i] for i in range(len(lst5))&#125;#只要是代码可以调用的，都可以去试着调用，别局限思维 生成器语法:(数据 for循环 if判断) &gt;迭代器的特性，一次性的 12345678gen = (i**2 for i in range(10))#这是一个生成器 genderator 也是一个迭代器#gen.__next__() #调用next方法逐个取出数据 一次取出一个for item in gen: print(item)#生成器本质上是一个迭代器 ！！！！利用for循环取出后，里面的数据就没有了 lst = list(gen)#把迭代器转为列表print(lst)#输入这个列表就为空了，for循环已经把迭代器里面的内容全部取出来了，此时迭代器已经没内容了 生成器函数中有一个关键字yield 生成器函数执行的时候，并不会执行函数，得到的是一个生成器 yield:只要函数中出现了yield,他就是一个生成器函数 作用： 1，可以返回数据 2，可以分段的执行函数中的内容，通多__next__()可以执行执行到下一个yield位置 匿名函数lambda表达式 语法：变量 &#x3D; lambda 参数1,参数2,参数3…:返回值 j &#x3D; lambda a,b: a+b 内置函数zipzip：可以把多个 可迭代内容进行合并 e g.多个列表一起的话，可以将每个相应项和并 12345678910111213141516lst1 = [&#x27;梁朝伟&#x27;,&#x27;张国荣&#x27;,&#x27;周星驰&#x27;]lst2 = [&#x27;40&#x27;,&#x27;38&#x27;,&#x27;45&#x27;]lst3 = [&quot;重庆森林&quot;,&quot;阿飞正传&quot;,&quot;007&quot;]#没用函数的方法res = [] #创建一个列表放置数据for i in range(len(lst)):#迭代每个数据的位置 one = lst1[i] two = lst1[i] three = lst1[i] res.append((one,two,three))print(res)res = zip(lst1,lst2,lst3)#是一个迭代器#用迭代方法取出数据for item in res: print(item)#将每一类输出lst4 = list(res) #list()方法，将输出的东西生成一个列表 locals()函数和globals()函数12345678910111213a = 188print(locals()) #此时locals被写在全局作用域范围内，此时看到的就是全局作用域中的内容def func(): a=226 print(locals())#此时locals放在局部作用于范围，看到的就是局部作用域的内容func()c = 12print(globals())def func(): a = 36 print(globals()) #输出的还是当前全局范围的参数，global只能看全局范围的参数func() sorted：排序sorted() 作为 Python 内置函数之一，其功能是对序列（列表、元组、字典、集合、还包括字符串）进行排序。sorted() 函数的基本语法格式如下：list &#x3D; sorted(iterable, key&#x3D;None, reverse&#x3D;False) 其中，iterable 表示指定的序列，key 参数可以自定义排序规则；reverse 参数指定以升序（False，默认）还是降序（True）进行排序。sorted() 函数会返回一个排好序的列表。 123lst1 = [32413,523535,6,36346627,222,525]lst2 = sorted(lst1)print(lst2)#生成[6, 222, 525, 32413, 523535, 36346627] filter:过滤filter()函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。 fliter(function ,iterabel) 将iterabel(可迭代对象)的每一项数据拿出来交给前面函数执行 参数： 接受两个参数，第一个为函数，第二个为序列（可迭代对象），序列的每个元素作为参数传递给函数进行判断，然后返回True或False，最后将返回True的元素放到新列表中。 function 判断函数，interable 可迭代对象 和map不一样，只负责筛选，不会计算 12345lst = [&quot;周杰伦&quot;,&quot;周笔畅&quot;,&quot;周迅&quot;,&quot;张杰&quot;,&quot;黄渤&quot;]f = filter(lambda x : x.startswith(&quot;周&quot;),lst)#本质上filter是一个生成器#匹配姓周的名字print(list(f)) #startswith() 匹配开头数据#x.startswith(&quot;周&quot;), filter函数会筛选出开头为周的成员 map:映射将列表的东西给函数去计算 1234lst = [1,2,3,4,5,6,7]res = [item*item for item in lst]#推导式r = map(lambda x : x * x,lst) print(r) #x^2","categories":[{"name":"python笔记","slug":"python笔记","permalink":"http://zhoumuyun.com/categories/python%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"Linux的sshd服务和文件的属性","slug":"linux","date":"2023-12-02T13:30:40.000Z","updated":"2023-12-03T08:28:01.304Z","comments":true,"path":"2023/12/02/linux/","link":"","permalink":"http://zhoumuyun.com/2023/12/02/linux/","excerpt":"此篇介绍了sshd的服务配置，Linux的文件属性","text":"此篇介绍了sshd的服务配置，Linux的文件属性 Linux的sshd服务查看ssh服务的状态 service sshd status 如果出现 Loaded: error (Reason: No such file or directory)，说明没有安装ssh服务如果出现Active: inactive (dead)说明已经安装了ssh服务，但是没有开启。按照第三步：开启ssh服务安装ssh服务yum -y install sshd 开启ssh服务systemctl start sshd 执行完命令后，用第一步：查看ssh服务状态的命令，如果出现以下提示Active: active (running) since Sun 2013-04-07 13:43:11 CST; 15s ago 说明你的ssh服务已经启动了 进入ssh配置文件更改vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config 光标移动到38行 ，将38行的#删掉 Windows连接打开poweshell ,输入ssh &#x72;&#111;&#x6f;&#116;&#64;&#49;&#57;&#x32;&#46;&#49;&#54;&#56;&#46;&#50;&#x30;&#48;&#46;&#49;&#x33;&#49;(目标主机地址) Linux文件属性linux用户对文件的权限(permission)分为读read、写write、执行execute和无权限。其中超级用户root拥有超级权限，对任何文件都具有读写执行的权限。 从文件的角度来讲，linux用户又分为三种，分别是文件拥有者owner、文件所属用户组group、其他用户others 运行ll指令时 每个字段分别代表 文件类型与权限 文件硬链接计数 文件所有者 文件所属用户组 文件大小 文件时间 文件名 文件类型与权限字段共有十个字符文件类型与权限第一个字符为文件类型属性-表示该文件为普通文件(regular file);d表示该文件为目录(directory);l表示该文件为指向其他文件的链接文件(link);b表示该文件为可随机访问的块设备文件(block);c表示该文件为只能按照字符顺序访问的字符设备文件(character);s表示该文件为用于数据传输的socket文件(socket);p表示该文件为用于先进先出方式数据传输的fifo文件(fifo); 九个字符rwxrwxrwx为文件权限属性,文件的权限包括读(r)、写(w)、执行(x)和无(-)权限每一组都是r、w、x和-字符的组合，r表示读权限，w表示写权限，x表示执行权限，－表示无权限 文件硬链接计数文件链接分为硬链接和软链接，该字段为文件的硬链接计数 文件所有者表示该文件的拥有者账号，文件拥有者都是在&#x2F;etc&#x2F;passwd文件中记录的合法用户账号 文件所属用户组文件所属用户组的作用是用来规定不是文件拥有者但是加入到该用户组中的用户对该文件的权限。文件大小文件时间字段表示文件的创建日期或者最后修改日期 文件名文件名以.开头的文件表示该文件是隐藏文件，其中.表示当前目录, ..表示上一级目录","categories":[{"name":"linux笔记","slug":"linux笔记","permalink":"http://zhoumuyun.com/categories/linux%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"怎么搭建自己的hexo博客","slug":"怎么搭建自己的hexo博客","date":"2023-12-02T08:31:06.000Z","updated":"2023-12-03T08:40:31.665Z","comments":true,"path":"2023/12/02/怎么搭建自己的hexo博客/","link":"","permalink":"http://zhoumuyun.com/2023/12/02/%E6%80%8E%E4%B9%88%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/","excerpt":"此篇介绍怎么用hexo和github搭建自己的博客，包括下载安装node、git、配置hexo、利用picgo做出自己的图床、配置typora","text":"此篇介绍怎么用hexo和github搭建自己的博客，包括下载安装node、git、配置hexo、利用picgo做出自己的图床、配置typora 安装node提前安装好(node.js)[https://nodejs.org/en] 点击左边的那个 20.10.0 安装GIt提前安装好(GIt)[https://git-scm.com/downloads] 1，进入网站，点击home 2，点击downloads 3，下载相应系统的版本 4，根据自己的处理器下载 提前注册一个GitHub账号 配置hexo1，创建一个目录放源文件，路径不要有中文 2，在当前目录(D:hexo)下进入cmd界面 3，使用npm命令安装Hexo, ​ npm install -g hexo-cli ​ hexo init blog​ cd blog​ hexo g 这是构建好后的目录 4，在cmd界面输入ssh-keygen -t rsa -C “邮件地址” 这里的邮件地址是GitHub的注册邮箱，成功后直接默认三次回车后，会在用户目录下生成C:\\Users\\19279.ssh 5，进入用户下的C:\\Users\\19279.ssh 6， 用记事本打开id_rsa.pub,将里面的密钥进行全选复制 7，打开GitHub设置，点击SSH and GPG keys选项，点击右上角New SSH key 8，将id_ras.pub里面的密钥复制到 9， 测试ssh -T git@github.com，看能不能连通，出现提示后表示已经接通 10，在hexo根目录也就是D:\\hexo\\blog，上面打开任务管理器下载hexo工具 npm install hexo-deployer-git –save 11，继续配置GitHub用户名和注册邮箱 git config –-global user.name “liuxunzhang”&#x2F;&#x2F; 你的github用户名，非昵称git config –-global user.email “xxx@qq.com“&#x2F;&#x2F; 填写你的github注册邮箱 12，在github上创建一个存储库 13， 存储库命名为GitHub的用户名＋github.io 14，打开hexo根目录，我这里是D:\\hexo\\blog，找到_config.yml文件，定位到文件最后，将最后改成这种形式 这是hexo的指令hexo n “我的博客” &#x3D;&#x3D; hexo new “我的博客” #新建文章hexo new page “pageName” #新建页面hexo g &#x3D;&#x3D; hexo generate #生成hexo s &#x3D;&#x3D; hexo server #启动服务预览hexo d &#x3D;&#x3D; hexo deploy #部署 hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令hexo version #查看Hexo的版本hexo generate #生成静态页面至public目录 hexo s -g #生成并本地预览hexo d -g #生成并上传 picgo图床的配置1，进入这个网站https://github.com/Molunerfinn/PicGo/releases 我这里下载的是picgo-setup-2.4.0-beta.6.exe版本 2，下载安装到一个文件夹，后面要用上 3，在GitHub新建一个存储库作为图床 4，点击头像&gt;打开setting&gt;GitHub&gt;打开最下面的Developer Settings&gt;Personal access tokens&gt;Token（classic) 5，点击右上角Generate new token&gt;Generate new token(classic) ​ 将里面的改成这样，名字可以随便取 6，生成token后全选复制&gt;然后打开picgo&gt;图床设置&gt; 名字可以随便取 仓库名是自己GitHub图床的名字 分支名字这里是main Token就是上面复制到那些 存储路径在自己的盘里面 7，将这个图床设置为默认图床 配置Typora1，打开typora&gt;点击文件&gt;打开偏好设置&gt; 2，打开图像设置 勾选前面四个&gt;将商创服务改成picgo,路径改成picgo的安装包位置","categories":[{"name":"怎么创建自己的博客","slug":"怎么创建自己的博客","permalink":"http://zhoumuyun.com/categories/%E6%80%8E%E4%B9%88%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"分享","slug":"分享","permalink":"http://zhoumuyun.com/tags/%E5%88%86%E4%BA%AB/"}]},{"title":"简单的木马病毒","slug":"new","date":"2023-12-01T12:42:09.000Z","updated":"2023-12-03T08:43:52.278Z","comments":true,"path":"2023/12/01/new/","link":"","permalink":"http://zhoumuyun.com/2023/12/01/new/","excerpt":"此篇包括telegram社工群的地址，永恒之黑的使用，利用mip22制作钓鱼网站，制作网页传播木马，伪装木马，压缩包携带木马，压缩包木马更换图标","text":"此篇包括telegram社工群的地址，永恒之黑的使用，利用mip22制作钓鱼网站，制作网页传播木马，伪装木马，压缩包携带木马，压缩包木马更换图标 社工库的电报群地址利用telegram进入社工群，获取他人信息 电报机器人群聊链接 社工庫机器人: t.me&#x2F;aishegongkubot?start&#x3D;AISGK_HBEIR85Xhttps://t.me/DATA_007bot?start=8989324940https://t.me/pingansgk_bot?start=ee95c5680fhttps://t.me/JokerSGKbot?start=87OE61VQhttps://t.me/PyramidNetBot?start=pRg3K08https://t.me/XingDun2Bot?start=4eoHoLE永恒之黑利用python打开代码让别人的电脑蓝屏 下载老师给的CVE-2020-0796-PoC 解压 打开解压的目录 在目录打开终端（在上面输入cmd进入终端） 安装打开文件所需要的模块 cryptography 运行文件，系统会提醒缺少什么模块 在后面添加源可以让pip下载更快（&#x2F;-i https://pypi.tuna.tsinghua.edu.cn/simple) 输入代码 python CVE-2020-0796.py ＋IP地址(目标主机的IP地址) 利用mip22制作钓鱼网站配置网络代理打开Allow LAN开关 找到自己的代理的IP(Allow LAN)英文旁边的连接符（三角形）和代理端口（port) 进入Linux shell设置代理，让Linux虚拟机能够访问到GitHub vim &#x2F;etc&#x2F;proxychains4.conf 用vim编辑器打开代理文件 找到最后一行 将socks4改为socks5 ＋ clash上的代理地址和端口 proxychains4 git clone https://github.com/makdosx/mip22 利用代理网络在GitHub下载mip22 proxychains4 -q bash .&#x2F;mip22.sh 执行mip22 进入mip22界面 按1进入钓鱼界面网站 输入序号选择钓鱼网站 按3开始收集信息 利用网页传播木马在虚拟机下载安装phpstudy软件 在首页打开Apache 点开网站&gt;管理&gt;打开根目录 把www目录里面的东西全部删除 创建index.html文件 打开vscode,创造html的模板，在中间输入 导入flash.js文件，在文件代码最下方代码 “href&#x3D;”地址改成自己虚拟机的地址 加上点击后要下载文件的名称。 这里是 href&#x3D;’192.168.200.128&#x2F;flash.exe’ :从192.168.200.128访问，跳出flash.exe下载 进入网站后弹出flash木马，点击即下载flash.exe 伪装网站让木马更加真实打开kali linux proxychains4 -q bash .&#x2F;mip22.sh(这里进入了相对目录下，在mip22目录下) 在虚拟机kali打开mip22 进入钓鱼网站界面，下载钓鱼网站 将这两个文件打包压缩，然后将压缩包剪切到 C:\\phpstudy_pro\\WWW，进行解压缩 将html文件改成index.html,并在里面插入 利用大灰狼远程控制系统关闭自身的病毒查杀和防火墙 解压大灰狼压缩包 打开大灰狼 输入自己的IP地址 生成木马文件 发送到目标电脑 目标电脑点击后 可以控制对方 利用压缩包携带木马文件准备好想要伪装的软件安装包和木马 这里将flash安装包和木马一起压缩，勾选创建自解压格式压缩文件 点击高级&gt;自解压选项 在常规选项输入计算机的目录：C:\\windows\\temp（解压的地方） 打开设置选项，输入两个文件解压后的路径 C:\\windows\\temp\\flashcenter_pp_ax_install_cn.exe C:\\windows\\temp\\flash.exe 给压缩包换图标，让病毒更加真实下载Restorator，把想要换图标的两个包拖到软件 把要替换的图标替换过去，然后保存","categories":[{"name":"网络安全","slug":"网络安全","permalink":"http://zhoumuyun.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"}]}],"categories":[{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/categories/%E7%AC%94%E8%AE%B0/"},{"name":"上课笔记","slug":"上课笔记","permalink":"http://zhoumuyun.com/categories/%E4%B8%8A%E8%AF%BE%E7%AC%94%E8%AE%B0/"},{"name":"前端笔记","slug":"前端笔记","permalink":"http://zhoumuyun.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"},{"name":"python笔记","slug":"python笔记","permalink":"http://zhoumuyun.com/categories/python%E7%AC%94%E8%AE%B0/"},{"name":"linux笔记","slug":"linux笔记","permalink":"http://zhoumuyun.com/categories/linux%E7%AC%94%E8%AE%B0/"},{"name":"怎么创建自己的博客","slug":"怎么创建自己的博客","permalink":"http://zhoumuyun.com/categories/%E6%80%8E%E4%B9%88%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"},{"name":"网络安全","slug":"网络安全","permalink":"http://zhoumuyun.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"图书管理系统","slug":"图书管理系统","permalink":"http://zhoumuyun.com/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"笔记","slug":"笔记","permalink":"http://zhoumuyun.com/tags/%E7%AC%94%E8%AE%B0/"},{"name":"PHP配置和交互","slug":"PHP配置和交互","permalink":"http://zhoumuyun.com/tags/PHP%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BA%A4%E4%BA%92/"},{"name":"分享","slug":"分享","permalink":"http://zhoumuyun.com/tags/%E5%88%86%E4%BA%AB/"}]}